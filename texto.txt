Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]Na computação, line feed (LF), nova linha ou quebra de linha é um caractere de controle que 
indica que uma linha deve ser acrescentada. Ele possui o código ASCII 10 (0A em hexadecimal)[1]. 
O LF surgiu como um comando para impressoras usado, normalmente, junto com um retorno de carro ou 
carriage return (CR, um comando que fazia a cabeça da impressora retornar para a posição mais à 
esquerda). Após processar um par CR-LF, a cabeça da impressora deverá estar no canto esquerdo e 
ter avançado uma linha da página.

No Unix, um LF é frequentemente chamado de newline: um LF é interpretado como sendo a instrução 
que tem o mesmo efeito que um CR-LF teria em uma impressora. Na linguagem C e muitas outras linguagens 
é representado por '\n'. A linguagem de programação Java define as seqüências de escape '\n' e o '\r'. 
Elas são sempre representadas por 0x0A e 0x0D, respectivamente. Isto significa que um '\n' pode não ser 
interpretado corretamente por programas de todas as plataformas — se tais programas não forem escritos 
em Java. Porém, a biblioteca do Java fornece métodos capazes de lidar corretamente com a leitura e 
escrita de arquivos de maneira consistente em qualquer ambiente.[2]